{"version":3,"file":"aframe-html.min.js","sources":["../src/HTMLMesh.js","../src/aframe-html.js"],"sourcesContent":["// This is a copy of https://github.com/mrdoob/three.js/blob/caddbf4cd84b62d7edf6b9fc937ca709afdfe915/examples/jsm/interactive/HTMLMesh.js\n// with the following changes:\n// - Keep compatibility with three r147 aframe 1.4.2, still using \"this.encoding = sRGBEncoding\", otherwise using \"this.colorSpace = SRGBColorSpace;\"\n// - window.dispatchEvent line commented, see the TODO below.\n// Look at https://github.com/mrdoob/three.js/commits/dev/examples/jsm/interactive/HTMLMesh.js\n// to see if there are other changes that can be retrieved here.\nimport {\n\tCanvasTexture,\n\tLinearFilter,\n\tMesh,\n\tMeshBasicMaterial,\n\tPlaneGeometry,\n\tSRGBColorSpace,\n\tsRGBEncoding,\n\tColor\n} from 'three';\n\n/**\n * This class can be used to render a DOM element onto a canvas and use it as a texture\n * for a plane mesh.\n *\n * A typical use case for this class is to render the GUI of `lil-gui` as a texture so it\n * is compatible for VR.\n *\n * ```js\n * const gui = new GUI( { width: 300 } ); // create lil-gui instance\n *\n * const mesh = new HTMLMesh( gui.domElement );\n * scene.add( mesh );\n * ```\n *\n * @augments Mesh\n * @three_import import { HTMLMesh } from 'three/addons/interactive/HTMLMesh.js';\n */\nclass HTMLMesh extends Mesh {\n\n\t/**\n\t * Constructs a new HTML mesh.\n\t *\n\t * @param {HTMLElement} dom - The DOM element to display as a plane mesh.\n\t */\n\tconstructor(dom) {\n\n\t\tconst texture = new HTMLTexture(dom);\n\n\t\tconst geometry = new PlaneGeometry(texture.image.width * 0.001, texture.image.height * 0.001);\n\t\tconst material = new MeshBasicMaterial({ map: texture, toneMapped: false, transparent: true });\n\n\t\tsuper(geometry, material);\n\n\t\tfunction onEvent(event) {\n\n\t\t\tmaterial.map.dispatchDOMEvent(event);\n\n\t\t}\n\n\t\tthis.addEventListener('mousedown', onEvent);\n\t\tthis.addEventListener('mousemove', onEvent);\n\t\tthis.addEventListener('mouseup', onEvent);\n\t\tthis.addEventListener('click', onEvent);\n\n\t\t/**\n\t\t * Frees the GPU-related resources allocated by this instance and removes all event listeners.\n\t\t * Call this method whenever this instance is no longer used in your app.\n\t\t */\n\t\tthis.dispose = function () {\n\n\t\t\tgeometry.dispose();\n\t\t\tmaterial.dispose();\n\n\t\t\tmaterial.map.dispose();\n\n\t\t\tcanvases.delete(dom);\n\n\t\t\tthis.removeEventListener('mousedown', onEvent);\n\t\t\tthis.removeEventListener('mousemove', onEvent);\n\t\t\tthis.removeEventListener('mouseup', onEvent);\n\t\t\tthis.removeEventListener('click', onEvent);\n\n\t\t};\n\n\t}\n\n}\n\nclass HTMLTexture extends CanvasTexture {\n\n\tconstructor(dom) {\n\n\t\tsuper(html2canvas(dom));\n\n\t\tthis.dom = dom;\n\n\t\tthis.anisotropy = 16;\n\t\tif (THREE.REVISION === '147') { // Keep compatibility with aframe 1.4.2\n\n\t\t\tthis.encoding = sRGBEncoding;\n\n\t\t} else {\n\n\t\t\tthis.colorSpace = SRGBColorSpace;\n\n\t\t}\n\n\t\tthis.minFilter = LinearFilter;\n\t\tthis.magFilter = LinearFilter;\n\t\tthis.generateMipmaps = false;\n\n\t\t// Create an observer on the DOM, and run html2canvas update in the next loop\n\t\tconst observer = new MutationObserver(() => {\n\n\t\t\tif (!this.scheduleUpdate) {\n\n\t\t\t\t// ideally should use xr.requestAnimationFrame, here setTimeout to avoid passing the renderer\n\t\t\t\tthis.scheduleUpdate = setTimeout(() => this.update(), 16);\n\n\t\t\t}\n\n\t\t});\n\n\t\tconst config = { attributes: true, childList: true, subtree: true, characterData: true };\n\t\tobserver.observe(dom, config);\n\n\t\tthis.observer = observer;\n\n\t}\n\n\tdispatchDOMEvent(event) {\n\n\t\tif (event.data) {\n\n\t\t\thtmlevent(this.dom, event.type, event.data.x, event.data.y);\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tthis.image = html2canvas(this.dom);\n\t\tthis.needsUpdate = true;\n\n\t\tthis.scheduleUpdate = null;\n\n\t}\n\n\tdispose() {\n\n\t\tif (this.observer) {\n\n\t\t\tthis.observer.disconnect();\n\n\t\t}\n\n\t\tthis.scheduleUpdate = clearTimeout(this.scheduleUpdate);\n\n\t\tsuper.dispose();\n\n\t}\n\n}\n\n\n//\n\nconst canvases = new WeakMap();\n\nfunction html2canvas(element) {\n\n\tconst range = document.createRange();\n\tconst color = new Color();\n\n\tfunction Clipper(context) {\n\n\t\tconst clips = [];\n\t\tlet isClipping = false;\n\n\t\tfunction doClip() {\n\n\t\t\tif (isClipping) {\n\n\t\t\t\tisClipping = false;\n\t\t\t\tcontext.restore();\n\n\t\t\t}\n\n\t\t\tif (clips.length === 0) return;\n\n\t\t\tlet minX = - Infinity, minY = - Infinity;\n\t\t\tlet maxX = Infinity, maxY = Infinity;\n\n\t\t\tfor (let i = 0; i < clips.length; i++) {\n\n\t\t\t\tconst clip = clips[i];\n\n\t\t\t\tminX = Math.max(minX, clip.x);\n\t\t\t\tminY = Math.max(minY, clip.y);\n\t\t\t\tmaxX = Math.min(maxX, clip.x + clip.width);\n\t\t\t\tmaxY = Math.min(maxY, clip.y + clip.height);\n\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.beginPath();\n\t\t\tcontext.rect(minX, minY, maxX - minX, maxY - minY);\n\t\t\tcontext.clip();\n\n\t\t\tisClipping = true;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tadd: function (clip) {\n\n\t\t\t\tclips.push(clip);\n\t\t\t\tdoClip();\n\n\t\t\t},\n\n\t\t\tremove: function () {\n\n\t\t\t\tclips.pop();\n\t\t\t\tdoClip();\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction drawText(style, x, y, string) {\n\n\t\tif (string !== '') {\n\n\t\t\tif (style.textTransform === 'uppercase') {\n\n\t\t\t\tstring = string.toUpperCase();\n\n\t\t\t}\n\n\t\t\tcontext.font = style.fontWeight + ' ' + style.fontSize + ' ' + style.fontFamily;\n\t\t\tcontext.textBaseline = 'top';\n\t\t\tcontext.fillStyle = style.color;\n\t\t\tcontext.fillText(string, x, y + parseFloat(style.fontSize) * 0.1);\n\n\t\t}\n\n\t}\n\n\tfunction buildRectPath(x, y, w, h, r) {\n\n\t\tif (w < 2 * r) r = w / 2;\n\t\tif (h < 2 * r) r = h / 2;\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x + r, y);\n\t\tcontext.arcTo(x + w, y, x + w, y + h, r);\n\t\tcontext.arcTo(x + w, y + h, x, y + h, r);\n\t\tcontext.arcTo(x, y + h, x, y, r);\n\t\tcontext.arcTo(x, y, x + w, y, r);\n\t\tcontext.closePath();\n\n\t}\n\n\tfunction drawBorder(style, which, x, y, width, height) {\n\n\t\tconst borderWidth = style[which + 'Width'];\n\t\tconst borderStyle = style[which + 'Style'];\n\t\tconst borderColor = style[which + 'Color'];\n\n\t\tif (borderWidth !== '0px' && borderStyle !== 'none' && borderColor !== 'transparent' && borderColor !== 'rgba(0, 0, 0, 0)') {\n\n\t\t\tcontext.strokeStyle = borderColor;\n\t\t\tcontext.lineWidth = parseFloat(borderWidth);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x, y);\n\t\t\tcontext.lineTo(x + width, y + height);\n\t\t\tcontext.stroke();\n\n\t\t}\n\n\t}\n\n\tfunction drawElement(element, style) {\n\n\t\t// Do not render invisible elements, comments and scripts.\n\t\tif (element.nodeType === Node.COMMENT_NODE || element.nodeName === 'SCRIPT' || (element.style && element.style.display === 'none')) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet x = 0, y = 0, width = 0, height = 0;\n\n\t\tif (element.nodeType === Node.TEXT_NODE) {\n\n\t\t\t// text\n\n\t\t\trange.selectNode(element);\n\n\t\t\tconst rect = range.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\t\t\twidth = rect.width;\n\t\t\theight = rect.height;\n\n\t\t\tdrawText(style, x, y, element.nodeValue.trim());\n\n\t\t} else if (element instanceof HTMLCanvasElement) {\n\n\t\t\t// Canvas element\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\n\t\t\tcontext.save();\n\t\t\tconst dpr = window.devicePixelRatio;\n\t\t\tcontext.scale(1 / dpr, 1 / dpr);\n\t\t\tcontext.drawImage(element, x, y);\n\t\t\tcontext.restore();\n\n\t\t} else if (element instanceof HTMLImageElement) {\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\t\t\twidth = rect.width;\n\t\t\theight = rect.height;\n\n\t\t\tcontext.drawImage(element, x, y, width, height);\n\n\t\t} else {\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\t\t\twidth = rect.width;\n\t\t\theight = rect.height;\n\n\t\t\tstyle = window.getComputedStyle(element);\n\n\t\t\t// Get the border of the element used for fill and border\n\n\t\t\tbuildRectPath(x, y, width, height, parseFloat(style.borderRadius));\n\n\t\t\tconst backgroundColor = style.backgroundColor;\n\n\t\t\tif (backgroundColor !== 'transparent' && backgroundColor !== 'rgba(0, 0, 0, 0)') {\n\n\t\t\t\tcontext.fillStyle = backgroundColor;\n\t\t\t\tcontext.fill();\n\n\t\t\t}\n\n\t\t\t// If all the borders match then stroke the round rectangle\n\n\t\t\tconst borders = ['borderTop', 'borderLeft', 'borderBottom', 'borderRight'];\n\n\t\t\tlet match = true;\n\t\t\tlet prevBorder = null;\n\n\t\t\tfor (const border of borders) {\n\n\t\t\t\tif (prevBorder !== null) {\n\n\t\t\t\t\tmatch = (style[border + 'Width'] === style[prevBorder + 'Width']) &&\n\t\t\t\t\t\t(style[border + 'Color'] === style[prevBorder + 'Color']) &&\n\t\t\t\t\t\t(style[border + 'Style'] === style[prevBorder + 'Style']);\n\n\t\t\t\t}\n\n\t\t\t\tif (match === false) break;\n\n\t\t\t\tprevBorder = border;\n\n\t\t\t}\n\n\t\t\tif (match === true) {\n\n\t\t\t\t// They all match so stroke the rectangle from before allows for border-radius\n\n\t\t\t\tconst width = parseFloat(style.borderTopWidth);\n\n\t\t\t\tif (style.borderTopWidth !== '0px' && style.borderTopStyle !== 'none' && style.borderTopColor !== 'transparent' && style.borderTopColor !== 'rgba(0, 0, 0, 0)') {\n\n\t\t\t\t\tcontext.strokeStyle = style.borderTopColor;\n\t\t\t\t\tcontext.lineWidth = width;\n\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise draw individual borders\n\n\t\t\t\tdrawBorder(style, 'borderTop', x, y, width, 0);\n\t\t\t\tdrawBorder(style, 'borderLeft', x, y, 0, height);\n\t\t\t\tdrawBorder(style, 'borderBottom', x, y + height, width, 0);\n\t\t\t\tdrawBorder(style, 'borderRight', x + width, y, 0, height);\n\n\t\t\t}\n\n\t\t\tif (element instanceof HTMLInputElement) {\n\n\t\t\t\tlet accentColor = style.accentColor;\n\n\t\t\t\tif (accentColor === undefined || accentColor === 'auto') accentColor = style.color;\n\n\t\t\t\tcolor.set(accentColor);\n\n\t\t\t\tconst luminance = Math.sqrt(0.299 * (color.r ** 2) + 0.587 * (color.g ** 2) + 0.114 * (color.b ** 2));\n\t\t\t\tconst accentTextColor = luminance < 0.5 ? 'white' : '#111111';\n\n\t\t\t\tif (element.type === 'radio') {\n\n\t\t\t\t\tbuildRectPath(x, y, width, height, height);\n\n\t\t\t\t\tcontext.fillStyle = 'white';\n\t\t\t\t\tcontext.strokeStyle = accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t\tif (element.checked) {\n\n\t\t\t\t\t\tbuildRectPath(x + 2, y + 2, width - 4, height - 4, height);\n\n\t\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\t\tcontext.strokeStyle = accentTextColor;\n\t\t\t\t\t\tcontext.lineWidth = 2;\n\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif (element.type === 'checkbox') {\n\n\t\t\t\t\tbuildRectPath(x, y, width, height, 2);\n\n\t\t\t\t\tcontext.fillStyle = element.checked ? accentColor : 'white';\n\t\t\t\t\tcontext.strokeStyle = element.checked ? accentTextColor : accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.fill();\n\n\t\t\t\t\tif (element.checked) {\n\n\t\t\t\t\t\tconst currentTextAlign = context.textAlign;\n\n\t\t\t\t\t\tcontext.textAlign = 'center';\n\n\t\t\t\t\t\tconst properties = {\n\t\t\t\t\t\t\tcolor: accentTextColor,\n\t\t\t\t\t\t\tfontFamily: style.fontFamily,\n\t\t\t\t\t\t\tfontSize: height + 'px',\n\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdrawText(properties, x + (width / 2), y, '✔');\n\n\t\t\t\t\t\tcontext.textAlign = currentTextAlign;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif (element.type === 'range') {\n\n\t\t\t\t\tconst [min, max, value] = ['min', 'max', 'value'].map(property => parseFloat(element[property]));\n\t\t\t\t\tconst position = ((value - min) / (max - min)) * (width - height);\n\n\t\t\t\t\tbuildRectPath(x, y + (height / 4), width, height / 2, height / 4);\n\t\t\t\t\tcontext.fillStyle = accentTextColor;\n\t\t\t\t\tcontext.strokeStyle = accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t\tbuildRectPath(x, y + (height / 4), position + (height / 2), height / 2, height / 4);\n\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\tcontext.fill();\n\n\t\t\t\t\tbuildRectPath(x + position, y, height, height, height / 2);\n\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\tcontext.fill();\n\n\t\t\t\t}\n\n\t\t\t\tif (element.type === 'color' || element.type === 'text' || element.type === 'number' || element.type === 'email' || element.type === 'password') {\n\n\t\t\t\t\tclipper.add({ x: x, y: y, width: width, height: height });\n\n\t\t\t\t\t// For password inputs, mask the value with dots\n\t\t\t\t\tconst displayValue = element.type === 'password' ? '*'.repeat(element.value.length) : element.value;\n\t\t\t\t\tdrawText(style, x + parseInt(style.paddingLeft), y + parseInt(style.paddingTop), displayValue);\n\n\t\t\t\t\tclipper.remove();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/*\n\t\t// debug\n\t\tcontext.strokeStyle = '#' + Math.random().toString( 16 ).slice( - 3 );\n\t\tcontext.strokeRect( x - 0.5, y - 0.5, width + 1, height + 1 );\n\t\t*/\n\n\t\tconst isClipping = style.overflow === 'auto' || style.overflow === 'hidden';\n\n\t\tif (isClipping) clipper.add({ x: x, y: y, width: width, height: height });\n\n\t\tfor (let i = 0; i < element.childNodes.length; i++) {\n\n\t\t\tdrawElement(element.childNodes[i], style);\n\n\t\t}\n\n\t\tif (isClipping) clipper.remove();\n\n\t}\n\n\tconst offset = element.getBoundingClientRect();\n\n\tlet canvas = canvases.get(element);\n\n\tif (canvas === undefined) {\n\n\t\tcanvas = document.createElement('canvas');\n\t\tcanvas.width = offset.width;\n\t\tcanvas.height = offset.height;\n\t\tcanvases.set(element, canvas);\n\n\t}\n\n\tconst context = canvas.getContext('2d'/*, { alpha: false }*/);\n\n\tconst clipper = new Clipper(context);\n\n\t// console.time( 'drawElement' );\n\n\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\n\tdrawElement(element);\n\n\t// console.timeEnd( 'drawElement' );\n\n\treturn canvas;\n\n}\n\nfunction htmlevent(element, event, x, y) {\n\n\tconst mouseEventInit = {\n\t\tclientX: (x * element.offsetWidth) + element.offsetLeft,\n\t\tclientY: (y * element.offsetHeight) + element.offsetTop,\n\t\tview: element.ownerDocument.defaultView\n\t};\n\n\t// TODO: Find out why this is added. Keep commented out when this file is updated\n\t// window.dispatchEvent( new MouseEvent( event, mouseEventInit ) );\n\n\tconst rect = element.getBoundingClientRect();\n\n\tx = x * rect.width + rect.left;\n\ty = y * rect.height + rect.top;\n\n\tfunction traverse(element) {\n\n\t\tif (element.nodeType !== Node.TEXT_NODE && element.nodeType !== Node.COMMENT_NODE) {\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tif (x > rect.left && x < rect.right && y > rect.top && y < rect.bottom) {\n\n\t\t\t\telement.dispatchEvent(new MouseEvent(event, mouseEventInit));\n\n\t\t\t\tif (element instanceof HTMLInputElement && element.type === 'range' && (event === 'mousedown' || event === 'click')) {\n\n\t\t\t\t\tconst [min, max] = ['min', 'max'].map(property => parseFloat(element[property]));\n\n\t\t\t\t\tconst width = rect.width;\n\t\t\t\t\tconst offsetX = x - rect.x;\n\t\t\t\t\tconst proportion = offsetX / width;\n\t\t\t\t\telement.value = min + (max - min) * proportion;\n\t\t\t\t\telement.dispatchEvent(new InputEvent('input', { bubbles: true }));\n\n\t\t\t\t}\n\n\t\t\t\tif (element instanceof HTMLInputElement && (element.type === 'text' || element.type === 'number' || element.type === 'email' || element.type === 'password') && (event === 'mousedown' || event === 'click')) {\n\n\t\t\t\t\telement.focus();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < element.childNodes.length; i++) {\n\n\t\t\t\ttraverse(element.childNodes[i]);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttraverse(element);\n\n}\n\nexport { HTMLMesh };\n","/* jshint esversion: 9, -W097 */\n/* For dealing with spline curves */\n/* global THREE, AFRAME, setTimeout, console */\n'use strict';\n\nimport { HTMLMesh } from './HTMLMesh.js';\n\nconst schemaHTML = {\n\thtml: {\n\t\ttype: 'selector',\n\t},\n\tcursor: {\n\t\ttype: 'selector',\n\t}\n};\n\ndocumentation:\n{\n\tschemaHTML.html.description = `HTML element to use.`;\n\tschemaHTML.cursor.description = `Visual indicator for where the user is currently pointing`;\n}\n\nconst _pointer = new THREE.Vector2();\nconst _event = { type: '', data: _pointer };\nAFRAME.registerComponent('html', {\n\tschema: schemaHTML,\n\tinit() {\n\t\tthis.rerender = this.rerender.bind(this);\n\t\tthis.handle = this.handle.bind(this);\n\t\tthis.onClick = e => this.handle('click', e);\n\t\tthis.onMouseLeave = e => this.handle('mouseleave', e);\n\t\tthis.onMouseEnter = e => this.handle('mouseenter', e);\n\t\tthis.onMouseUp = e => this.handle('mouseup', e);\n\t\tthis.onMouseDown = e => this.handle('mousedown', e);\n\t\tthis.mouseMoveDetail = {\n\t\t\tdetail: {\n\t\t\t\tcursorEl: null,\n\t\t\t\tintersection: null\n\t\t\t}\n\t\t};\n\t},\n\tplay() {\n\t\tthis.el.addEventListener('click', this.onClick);\n\t\tthis.el.addEventListener('mouseleave', this.onMouseLeave);\n\t\tthis.el.addEventListener('mouseenter', this.onMouseEnter);\n\t\tthis.el.addEventListener('mouseup', this.onMouseUp);\n\t\tthis.el.addEventListener('mousedown', this.onMouseDown);\n\t},\n\tpause() {\n\t\tthis.el.removeEventListener('click', this.onClick);\n\t\tthis.el.removeEventListener('mouseleave', this.onMouseLeave);\n\t\tthis.el.removeEventListener('mouseenter', this.onMouseEnter);\n\t\tthis.el.removeEventListener('mouseup', this.onMouseUp);\n\t\tthis.el.removeEventListener('mousedown', this.onMouseDown);\n\t},\n\tupdate() {\n\t\tthis.remove();\n\t\tif (!this.data.html) return;\n\t\tconst mesh = new HTMLMesh(this.data.html);\n\t\tthis.el.setObject3D('html', mesh);\n\t\tthis.data.html.addEventListener('input', this.rerender);\n\t\tthis.data.html.addEventListener('change', this.rerender);\n\t\tthis.cursor = this.data.cursor ? this.data.cursor.object3D : null;\n\t},\n\ttick() {\n\t\tif (this.activeRaycaster) {\n\t\t\tconst intersection = this.activeRaycaster.components.raycaster.getIntersection(this.el);\n\t\t\tthis.mouseMoveDetail.detail.cursorEl = this.activeRaycaster;\n\t\t\tthis.mouseMoveDetail.detail.intersection = intersection;\n\t\t\tthis.handle('mousemove', this.mouseMoveDetail);\n\t\t}\n\t},\n\thandle(type, evt) {\n\t\tconst intersection = evt.detail.intersection;\n\t\tconst raycaster = evt.detail.cursorEl;\n\t\tif (type === 'mouseenter') {\n\t\t\tthis.activeRaycaster = raycaster;\n\t\t}\n\t\tif (type === 'mouseleave' && this.activeRaycaster === raycaster) {\n\t\t\tthis.activeRaycaster = null;\n\t\t}\n\t\tif (this.cursor) this.cursor.visible = false;\n\t\tif (intersection) {\n\t\t\tconst mesh = this.el.getObject3D('html');\n\t\t\tconst uv = intersection.uv;\n\t\t\t_event.type = type;\n\t\t\t_event.data.set( uv.x, 1 - uv.y );\n\t\t\tmesh.dispatchEvent( _event );\n\n\t\t\tif (this.cursor) {\n\t\t\t\tthis.cursor.visible = true;\n\t\t\t\tthis.cursor.parent.worldToLocal(this.cursor.position.copy(intersection.point));\n\t\t\t}\n\t\t}\n\t},\n\trerender() {\n\t\tconst mesh = this.el.getObject3D('html');\n\t\tif (mesh && !mesh.material.map.scheduleUpdate) {\n\t\t\tmesh.material.map.scheduleUpdate = setTimeout( () => mesh.material.map.update(), 16 );\n\t\t}\n\t},\n\tremove() {\n\t\tconst mesh = this.el.getObject3D('html');\n\t\tif (mesh) {\n\t\t\tthis.el.removeObject3D('html');\n\t\t\tthis.data.html.removeEventListener('input', this.rerender);\n\t\t\tthis.data.html.removeEventListener('change', this.rerender);\n\t\t\tmesh.dispose();\n\t\t}\n\t\tthis.activeRaycaster = null;\n\t\tthis.mouseMoveDetail.detail.cursorEl = null;\n\t\tthis.mouseMoveDetail.detail.intersection = null;\n\t\tthis.cursor = null;\n\t},\n});\n"],"names":["HTMLMesh","Mesh","constructor","dom","texture","HTMLTexture","geometry","PlaneGeometry","image","width","height","material","MeshBasicMaterial","map","toneMapped","transparent","onEvent","event","dispatchDOMEvent","super","this","addEventListener","dispose","canvases","delete","removeEventListener","CanvasTexture","html2canvas","anisotropy","THREE","REVISION","encoding","sRGBEncoding","colorSpace","SRGBColorSpace","minFilter","LinearFilter","magFilter","generateMipmaps","observer","MutationObserver","scheduleUpdate","setTimeout","update","observe","attributes","childList","subtree","characterData","data","element","x","y","mouseEventInit","clientX","offsetWidth","offsetLeft","clientY","offsetHeight","offsetTop","view","ownerDocument","defaultView","rect","getBoundingClientRect","traverse","nodeType","Node","TEXT_NODE","COMMENT_NODE","left","right","top","bottom","dispatchEvent","MouseEvent","HTMLInputElement","type","min","max","property","parseFloat","proportion","value","InputEvent","bubbles","focus","i","childNodes","length","htmlevent","needsUpdate","disconnect","clearTimeout","WeakMap","range","document","createRange","color","Color","drawText","style","string","textTransform","toUpperCase","context","font","fontWeight","fontSize","fontFamily","textBaseline","fillStyle","fillText","buildRectPath","w","h","r","beginPath","moveTo","arcTo","closePath","drawBorder","which","borderWidth","borderStyle","borderColor","strokeStyle","lineWidth","lineTo","stroke","offset","canvas","get","undefined","createElement","set","getContext","clipper","clips","isClipping","doClip","restore","minX","Infinity","minY","maxX","maxY","clip","Math","save","add","push","remove","pop","clearRect","drawElement","nodeName","display","selectNode","nodeValue","trim","HTMLCanvasElement","dpr","window","devicePixelRatio","scale","drawImage","HTMLImageElement","getComputedStyle","borderRadius","backgroundColor","fill","borders","match","prevBorder","border","borderTopWidth","borderTopStyle","borderTopColor","accentColor","accentTextColor","sqrt","g","b","checked","currentTextAlign","textAlign","position","displayValue","repeat","parseInt","paddingLeft","paddingTop","overflow","_event","Vector2","AFRAME","registerComponent","schema","html","cursor","init","rerender","bind","handle","onClick","e","onMouseLeave","onMouseEnter","onMouseUp","onMouseDown","mouseMoveDetail","detail","cursorEl","intersection","play","el","pause","mesh","setObject3D","object3D","tick","activeRaycaster","components","raycaster","getIntersection","evt","visible","getObject3D","uv","parent","worldToLocal","copy","point","removeObject3D"],"mappings":"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"}